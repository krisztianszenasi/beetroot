package com.krisztianszenasi.beetroot.code_generator;

import com.krisztianszenasi.beetroot.ast.nodes.FileNode;
import com.krisztianszenasi.beetroot.ast.nodes.Node;
import com.krisztianszenasi.beetroot.ast.visitor.AstVisitor;

import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Properties;

abstract public class CodeGenerator extends AstVisitor<String> {

    public void write(Node tree, String fileName) {
        try {
            FileWriter myWriter = new FileWriter(buildFilename(fileName));
            myWriter.write(visit(tree));
            myWriter.close();
        } catch (IOException e) {
            System.out.println("Could not write to file.");
        }
    }

    @Override
    public String visitFileNode(FileNode node) {
        return String.format("%s %s\n", getCommentChars(), buildFileHeader());
    }

    abstract public String buildFilename(String filename);
    public String buildFileHeader() {
        return String.format(
                "Generated by the beetroot compiler at %s.",
                LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"))
        );
    }

    abstract public String getCommentChars();
}
